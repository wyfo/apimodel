name: Documentation

on:
  push:
    branches:
      - master
    tags:
      - v[0-9]*.*.*
    paths:
      - apischema/**
      - benchmark/**
      - docs/**
      - examples/**
      - mkdocs.yml
  pull_request:
    paths:
      - apischema/**
      - benchmark/**
      - docs/**
      - examples/**
      - mkdocs.yml

jobs:
  run_benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('tests/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Cythonize
        run: scripts/cythonize.sh
      - name: Install apischema
        run: pip install -e .
      - name: Install requirements
        run: pip install -r benchmark/requirements.txt
      - name: Run benchmark
        run: python benchmark/main.py
      - uses: actions/upload-artifact@v2
        with:
          name: benchmark_table
          path: examples/benchmark_table.md
      - uses: actions/upload-artifact@v2
        with:
          name: benchmark_chart
          path: docs/benchmark_chart.svg
  upload_doc:
    needs: [run_benchmark]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('tests/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/download-artifact@v2
        with:
          name: benchmark_table
          path: examples
      - uses: actions/download-artifact@v2
        with:
          name: benchmark_chart
          path: docs
      - name: Install requirements
        run: pip install -r docs/requirements.txt
      - name: Build documentation
        run: mkdocs build
      - uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: site/**
  publish_doc:
    needs: [run_benchmark]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('tests/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/download-artifact@v2
        with:
          name: benchmark_table
          path: examples
      - uses: actions/download-artifact@v2
        with:
          name: benchmark_chart
          path: docs
      - name: Install requirements
        run: pip install -r docs/requirements.txt
      - name: Setup git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch origin gh-pages --depth=1
      - name: Publish documentation
        run: |
          export version=$(python setup.py --version | cut -d. -f-2)
          export revision=$(python setup.py --version | cut -d. -f3)
          if [[ $GITHUB_REF != refs/tags/* ]]; then
            mike deploy -p $version dev -t "$version (dev)" -u
            echo "deploy $version dev"
          elif [[ $revision == 0 ]]; then
            mike retitle latest "$(mike list latest -j | jq .version -r)"
            mike deploy -p $version latest -t "$version (latest)" -u
            echo "deploy $version latest"
          else
            mike deploy -p $version
            echo "deploy $version"
          fi